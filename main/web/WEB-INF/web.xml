<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.5"
         xmlns="http://java.sun.com/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee
                http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">
    <context-param>
        <param-name>isLog4jAutoInitializationDisabled</param-name>
        <param-value>true</param-value>
    </context-param>

    <listener>
        <listener-class>org.apache.logging.log4j.web.Log4jServletContextListener</listener-class>
    </listener>
    <filter>
        <filter-name>log4jServletFilter</filter-name>
        <filter-class>org.apache.logging.log4j.web.Log4jServletFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>log4jServletFilter</filter-name>
        <url-pattern>/*</url-pattern>
        <dispatcher>REQUEST</dispatcher>
        <dispatcher>FORWARD</dispatcher>
        <dispatcher>INCLUDE</dispatcher>
        <dispatcher>ERROR</dispatcher>
    </filter-mapping>

    <!-- Spring context startup Spring的初始化-->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>classpath:/spring/applicationContext.xml,
            classpath:/spring/applicationContext-*.xml
        </param-value>
    </context-param>
    <context-param>
        <param-name>agentConfigLocation</param-name>
        <!-- 本地开发使用，部署到集成环境时，注释掉该代码-->
        <param-value>classpath:/paas-agent-config.properties</param-value>
        <!-- 集成、验收、生产环境使用，部署到集成、验收、生产环境时，打开该注释-->
        <!--<param-value>file:/abp_home/ucloud/config/paas-agent-config.properties</param-value>-->
    </context-param>

    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>


    <filter>
        <filter-name>hibernateFilter</filter-name>
        <filter-class>
            org.springframework.orm.hibernate4.support.OpenSessionInViewFilter
        </filter-class>
        <!-- singleSession默认为true,若设为false则等于没用OpenSessionInView -->
        <init-param>
            <param-name>singleSession</param-name>
            <param-value>true</param-value>
        </init-param>
        <init-param>
            <param-name>flushMode</param-name>
            <param-value>AUTO</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>hibernateFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <!-- Spring MVC Configuration Spring MVC的配置-->
    <servlet>
        <servlet-name>dispatcher</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>
                classpath:/spring/spring-mvc.xml
            </param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>

    <servlet-mapping>
        <servlet-name>dispatcher</servlet-name>
        <url-pattern>*.do</url-pattern>
    </servlet-mapping>

    <filter>
        <filter-name>encodingFilter</filter-name>
        <filter-class>com.metarnet.core.common.filter.EncodingFilter</filter-class>
        <init-param>
            <param-name>useEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>encodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <!--druid web监控配置-->
    <servlet>
        <servlet-name>DruidStatView</servlet-name>
        <servlet-class>com.alibaba.druid.support.http.StatViewServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>DruidStatView</servlet-name>
        <url-pattern>/druid/*</url-pattern>
    </servlet-mapping>

    <!--<servlet>-->
    <!--<servlet-name>CXFServlet</servlet-name>-->
    <!--<servlet-class>org.apache.cxf.transport.servlet.CXFServlet</servlet-class>-->
    <!--<load-on-startup>0</load-on-startup>-->
    <!--</servlet>-->

    <!--<servlet-mapping>-->
    <!--<servlet-name>CXFServlet</servlet-name>-->
    <!--<url-pattern>/webservices/*</url-pattern>-->
    <!--</servlet-mapping>-->
    <filter>
        <filter-name>LoginValidateFilter</filter-name>
        <filter-class>com.metarnet.core.common.filter.LoginValidateFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>LoginValidateFilter</filter-name>
        <url-pattern>*.html</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>LoginValidateFilter</filter-name>
        <url-pattern>*.do</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>LoginValidateFilter</filter-name>
        <url-pattern>*.jsp</url-pattern>
    </filter-mapping>

    <listener>
        <listener-class>com.metarnet.core.common.client.WFServiceLoadListener</listener-class>
    </listener>

    <listener>
        <listener-class>com.ucloud.paas.agent.PaasAgentLoadListener</listener-class>
    </listener>

    <welcome-file-list>
        <welcome-file>menu.jsp</welcome-file>
    </welcome-file-list>

    <!-- 添加  CXF 的Servlet ，处理 webservice的请求 -->
    <!--<servlet>-->
        <!--<servlet-name>cxf</servlet-name>-->
        <!--<servlet-class>org.apache.cxf.transport.servlet.CXFServlet</servlet-class>-->
        <!--<load-on-startup>0</load-on-startup>-->
    <!--</servlet>-->
    <!--<servlet-mapping>-->
        <!--<servlet-name>cxf</servlet-name>-->
        <!--<url-pattern>/ws/*</url-pattern>-->
    <!--</servlet-mapping>-->
</web-app>